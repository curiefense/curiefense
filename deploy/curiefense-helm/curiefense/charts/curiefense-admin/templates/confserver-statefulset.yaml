apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app.kubernetes.io/name: confserver
  name: confserver
  namespace: {{ .Release.Namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: confserver
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: confserver
    spec:
      initContainers:
        - name: bootstrap-deploy
          {{ if regexMatch ".*/.*:" .Values.global.images.confserver }}
          {{/* The image name contains a version tag (e.g. for tests), do not append docker_tag */}}
          image: {{ .Values.global.images.confserver }}
          {{ else }}
          image: {{ .Values.global.images.confserver }}:{{ .Values.global.settings.docker_tag }}
          {{ end }}
          env:
            - name: "IF_NO_CONFIG_PULL_FROM"
              value: "/bootstrap/confdb.bundle"
          volumeMounts:
          - mountPath: /config
            name: persistent-confdb
          command: ["/usr/bin/dumb-init", "/bin/bash", "/bootstrap/bootstrap_config.sh"]

      containers:
      - name: confserver-nginx
        env:
        - name: BOOTSTRAP_BUCKET_ON_STARTUP
          value: "yes"
        - name: CURIE_BUCKET_LINK
          value: {{ .Values.global.settings.curieconf_manifest_url }}
        {{ if regexMatch ".*/.*:" .Values.global.images.confserver }}
        {{/* The image name contains a version tag (e.g. for tests), do not append docker_tag */}}
        image: {{ .Values.global.images.confserver }}
        {{ else }}
        image: {{ .Values.global.images.confserver }}:{{ .Values.global.settings.docker_tag }}
        {{ end }}
        command: ["/usr/bin/dumb-init", "/bin/bash", "/init/start_nginx.sh"]
        ports:
        - containerPort: 80
          name: confserver-http
        livenessProbe:
          httpGet:
            path: /api/v1/
            port: confserver-http
        volumeMounts:
        - mountPath: /uwsgi
          name: uwsgi-socket
      - name: confserver-uwsgi
        env:
        - name: CURIE_BUCKET_LINK
          value: {{ .Values.global.settings.curieconf_manifest_url }}
        {{ if regexMatch ".*/.*:" .Values.global.images.confserver }}
        {{/* The image name contains a version tag (e.g. for tests), do not append docker_tag */}}
        image: {{ .Values.global.images.confserver }}
        {{ else }}
        image: {{ .Values.global.images.confserver }}:{{ .Values.global.settings.docker_tag }}
        {{ end }}
        volumeMounts:
        - mountPath: /uwsgi
          name: uwsgi-socket
        - mountPath: /run/secrets/s3cfg
          name: s3cfg
        - mountPath: /config
          name: persistent-confdb
        command: ["/usr/bin/dumb-init", "/bin/bash", "/init/start_uwsgi.sh"]
      restartPolicy: Always
      serviceAccountName: ""
      volumes:
      - name: s3cfg
        secret:
          items:
          - key: s3cfg
            path: s3cfg
          secretName: s3cfg
      - name: uwsgi-socket
        emptydir: {}
{{- if .Values.global.tolerations }}
      tolerations:
{{ toYaml .Values.global.tolerations | indent 8 }}
{{- end }}
  volumeClaimTemplates:
  - metadata:
      name: persistent-confdb
    spec:
      storageClassName: {{ .Values.global.storage.storage_class_name }}
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: {{ .Values.global.storage.confserver_storage_size }}
