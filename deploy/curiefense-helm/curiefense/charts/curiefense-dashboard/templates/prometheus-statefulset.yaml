apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app.kubernetes.io/name: prometheus
  name: prometheus
  namespace: {{ .Release.Namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: prometheus
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: prometheus
    spec:
      containers:
      {{ if regexMatch ".*/.*:" .Values.global.images.prometheus }}
      {{/* The image name contains a version tag (e.g. for tests), do not append docker_tag */}}
      - image: {{ .Values.global.images.prometheus }}
      {{ else }}
      - image: {{ .Values.global.images.prometheus }}:{{ .Values.global.settings.docker_tag }}
      {{ end }}
        name: prometheus
        ports:
        - containerPort: 9090
          name: prometheus-http
        livenessProbe:
          httpGet:
            path: /-/healthy
            port: prometheus-http
        volumeMounts:
        - mountPath: /var/run/prometheus
          name: persistent-prometheus
      restartPolicy: Always
      serviceAccountName: ""
{{- if .Values.global.tolerations }}
      tolerations:
{{ toYaml .Values.global.tolerations | indent 8 }}
{{- end }}
  volumeClaimTemplates:
  - metadata:
      name: persistent-prometheus
    spec:
      storageClassName: {{ .Values.global.storage.storage_class_name }}
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: {{ .Values.global.storage.prometheus_storage_size }}
