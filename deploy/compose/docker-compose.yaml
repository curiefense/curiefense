version: "3.7"
services:
  curieproxy:
    container_name: curieproxy
    image: "curiefense/curieproxy-envoy:${DOCKER_TAG}"
    restart: always
    volumes:
      - curieproxy_config:/config
    environment:
      - ENVOY_UID
      - TARGET_ADDRESS=echo
      - TARGET_PORT=8080
    networks:
      curiemesh:
        aliases:
          - curieproxy
    ports:
      - "30081:80"
      - "30444:443"
      - "8001:8001"
    secrets:
      - curieproxysslcrt
      - curieproxysslkey

  logdb:
    container_name: logdb
    image: "curiefense/logdb:${DOCKER_TAG}"
    restart: always
    volumes:
      - persistent_logdb:/logdb/data
    environment:
      - POSTGRES_READONLY_PASSWORD_FILE=/run/secrets/postgres_ro_password
      - POSTGRES_PASSWORD_FILE=/run/secrets/postgres_superuser_password
    networks:
      - curiemesh
    ports:
      - "5432:5432"
    secrets:
      - postgres_ro_password
      - postgres_superuser_password

  curielogserver:
    container_name: curielogserver
    image: "curiefense/curielogserver:${DOCKER_TAG}"
    restart: always
    environment:
      - CURIELOGSERVER_DBHOST=logdb
      - CURIELOGSERVER_DBUSER=logserver_ro
      - CURIELOGSERVER_DBPASSWORD_FILE=/run/secrets/postgres_ro_password
    networks:
      curiemesh:
        aliases:
          - curielogserver
      confnet:
        aliases:
          - curielogserver
    ports:
      - "80:80"
    secrets:
      - postgres_ro_password

  confserver:
    container_name: confserver
    image: "curiefense/confserver:${DOCKER_TAG}"
    restart: always
    volumes:
      - persistent_confdb:/config
      - local_bucket:/bucket
    tty: true
    environment:
      - CURIE_BUCKET_LINK
      - INIT_GIT_ON_STARTUP=yes
      - BOOTSTRAP_BUCKET_ON_STARTUP=yes
      - IF_NO_CONFIG_PULL_FROM=/bootstrap/confdb.bundle
    networks:
      - confnet
    ports:
      - "30000:80"
    secrets:
      - s3cfg
  #      - gc
  #      - azr

  curiesync:
    container_name: curiesync
    image: "curiefense/curiesync:${DOCKER_TAG}"
    restart: always
    volumes:
      - local_bucket:/bucket
      - curieproxy_config:/config
    tty: true
    environment:
      - CURIE_BUCKET_LINK
      - RUN_MODE=PERIODIC_SYNC
    networks:
      - curiemesh
    secrets:
      - s3cfg
#      - gc
#      - azr

  redis:
    container_name: redis
    image: "curiefense/redis:${DOCKER_TAG}"
    restart: always
    volumes:
      - persistent_redis:/data
    networks:
      curiemesh:
        aliases:
          - redis
    ports:
      - "6379:6379"

  echo:
    container_name: echo
    image: jmalloc/echo-server
    restart: always
    networks:
      curiemesh:
        aliases:
          - echo

  curielogger:
    container_name: curielogger
    image: "curiefense/curielogger:${DOCKER_TAG}"
    restart: always
    environment:
      - CURIELOGGER_DBHOST=logdb
      - CURIELOGGER_DBUSER=postgres
      - CURIELOGGER_DBPASSWORD_FILE=/run/secrets/postgres_superuser_password
    networks:
      - curiemesh
    ports:
      - "9001:9001"
      - "2112:2112"
    depends_on:
      - logdb
    secrets:
      - postgres_superuser_password

  uiserver:
    container_name: uiserver
    image: "curiefense/uiserver:${DOCKER_TAG}"
    restart: always
    networks:
      - confnet
    ports:
      - "30080:80"
      - "30443:443"
    secrets:
      - uisslcrt
      - uisslkey

  prometheus:
    container_name: prometheus
    image: "curiefense/prometheus:${DOCKER_TAG}"
    restart: always
    volumes:
      -   persistent_prometheus:/var/run/prometheus
    ports:
      - 9090:9090
    networks:
      - curiemesh

  grafana:
    container_name: grafana
    image: "curiefense/grafana:${DOCKER_TAG}"
    restart: always
    volumes:
      - persistent_grafana:/var/lib/grafana
    networks:
      - curiemesh
      - confnet
    ports:
      - 30300:3000

networks:
  curiemesh:
    name: curiemesh
    driver: bridge
  confnet:
    name: confnet
    driver: bridge

volumes:
  # persistent volumes
  persistent_logdb:
  persistent_confdb:
  persistent_grafana:
  persistent_redis:
  persistent_prometheus:
  # used for single-node dev or demo deployments.
  # Replaced with an S3/GC/AZE bucket in larger deployments
  local_bucket:
  # shared between curiesync and curieproxy
  curieproxy_config:

secrets:
  s3cfg:
    file: "curiesecrets/s3cfg"
#  gc:
#    file: "${CURIESECRETS}/gcloud"
#  azr:
#    file: "${CURIESECRETS}/azr"

  uisslcrt:
    file: "curiesecrets/uiserver_ssl/ui.crt"
  uisslkey:
    file: "curiesecrets/uiserver_ssl/ui.key"
  curieproxysslcrt:
    file: "curiesecrets/curieproxy_ssl/site.crt"
  curieproxysslkey:
    file: "curiesecrets/curieproxy_ssl/site.key"
  postgres_ro_password:
    file: "curiesecrets/logdb/ro_password.txt"
  postgres_superuser_password:
    file: "curiesecrets/logdb/postgres_password.txt"

