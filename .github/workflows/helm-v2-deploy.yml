name: Run e2e tests on Helm v2

on:
  pull_request:
    paths:
      - "deploy/**"
      - "curiefense/**"
      - "e2e/**"
      - ".github/workflows/helm-v2-deploy.yml"

jobs:
  helm-v2-minikube:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8]

    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Setup Minikube
        uses: manusa/actions-setup-minikube@v2.3.0
        with:
          driver: docker
          minikube version: 'v1.17.1'
          kubernetes version: 'v1.19.2'
          github token: ${{ secrets.GITHUB_TOKEN }}
          start args: "--memory='3Gi' --addons=ingress"

      - name: Install Helm
        run: |
            # Remove existing helm
            sudo apt remove -y helm || true
            which helm | sudo rm || true
            curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3
            chmod 700 get_helm.sh
            ./get_helm.sh -v v2.17.0

            kubectl -n kube-system create serviceaccount tiller
            kubectl create clusterrolebinding tiller --clusterrole cluster-admin --serviceaccount=kube-system:tiller
            helm init --service-account tiller --wait
            helm version

      - name: Interact with the cluster
        run: |
            export BASEDIR=$(git rev-parse --show-toplevel)
            export VERSION=$(git rev-parse --short=12 HEAD)
            export HELM_VERSION=2

            # Deploy all services: istio, curiefense, and echoserver (test app)
            deploy/deploy-ci.sh

      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@ea8720de4a2e723f8204d44fc0178744cf401c1a
        with:
          files: e2e/pytest.xml
          github_token: ${{ secrets.GITHUB_TOKEN }}
          check_name: E2E Test Results on docker-compose
          comment_title: E2E Test Statistics
          hide_comments: all but latest
          comment_on_pr: true
          report_individual_runs: true
          deduplicate_classes_by_file_name: false
        if: >
          always() &&
          github.event.sender.login != 'dependabot[bot]' &&
          ( github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name == github.repository )

      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: Unit Test Results
          path: |
            e2e/pytest.yml
