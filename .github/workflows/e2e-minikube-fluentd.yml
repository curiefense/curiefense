name: Run e2e tests on minikube with fluentd

on:
  pull_request:
    paths:
      - "deploy/**"
      - "curiefense/**"
      - "e2e/**"
      - ".github/workflows/e2e-tests.yml"

jobs:
  e2e-minikube-fluentd:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8]

    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Setup Minikube
        uses: manusa/actions-setup-minikube@v2.3.0
        with:
          driver: docker
          minikube version: 'v1.22.0'
          kubernetes version: 'v1.20.2'
          github token: ${{ secrets.GITHUB_TOKEN }}
          start args: "--memory='3Gi' --addons=ingress"

      - name: Interact with the cluster
        run: |
            export BASEDIR=$(git rev-parse --show-toplevel)
            export VERSION=$(git rev-parse --short=12 HEAD)
            export USE_FLUENTD=1
            export JWT_WORKAROUND=1

            # Deploy all services: istio, curiefense, and echoserver (test app)
            deploy/deploy-ci.sh

            echo "-- Install curieconfctl --"

            python3 -m venv "$BASEDIR/venv"
            source "$BASEDIR/venv/bin/activate"
            pip install -U requests pytest pytest-html wheel beautifulsoup4

            pushd "curiefense/curieconf/utils"
            pip install -e .
            popd

            pushd "curiefense/curieconf/client"
            pip install -e .
            popd

            echo "-- Run e2e tests --"
            pushd e2e

            # TODO(flaper87): Work on enabling full e2e
            # tests.
            export IP=$(minikube ip)
            export INGRESS_PORT=$(kubectl -n istio-system get service istio-ingressgateway -o jsonpath='{.spec.ports[?(@.name=="http2")].nodePort}')
            export IPPORT=$IP:$INGRESS_PORT
            pytest -m all_modules --log-level INFO --base-protected-url http://$IPPORT --base-conf-url http://$IP:30000/api/v2/ --base-ui-url http://$IP:30080 --elasticsearch-url http://$IP:30200/ --junit-xml pytest.xml .

      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@ea8720de4a2e723f8204d44fc0178744cf401c1a
        with:
          files: e2e/pytest.xml
          github_token: ${{ secrets.GITHUB_TOKEN }}
          check_name: E2E Test Results on docker-compose
          comment_title: E2E Test Statistics
          hide_comments: all but latest
          comment_on_pr: true
          report_individual_runs: true
          deduplicate_classes_by_file_name: false
        if: >
          always() &&
          github.event.sender.login != 'dependabot[bot]' &&
          ( github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name == github.repository )

      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: Unit Test Results
          path: |
            e2e/pytest.xml
